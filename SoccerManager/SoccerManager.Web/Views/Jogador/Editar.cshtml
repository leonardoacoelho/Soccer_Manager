@model SoccerManager.Web.Models.JogadorVM

@{
    ViewBag.Title = "Editar";
}

<h2>Jogador</h2>

<ol class="breadcrumb text-info">
    <li><a href="@Url.Action("Index")">Jogadores</a></li>
    <li>Editar</li>
</ol>

<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.DataTransferencia)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-sm-3 col-md-2" })
            <div class="col-sm-3 col-md-2">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Apelido, htmlAttributes: new { @class = "control-label col-sm-3 col-md-2" })
            <div class="col-sm-3 col-md-2">
                @Html.EditorFor(model => model.Apelido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Apelido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Posicao_Id, htmlAttributes: new { @class = "control-label col-sm-3 col-md-2" })
            <div class="col-sm-3 col-md-2">
                @Html.DropDownListFor(model => model.Posicao_Id, Model.Posicoes, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Posicao_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Salario, htmlAttributes: new { @class = "control-label col-sm-3 col-md-2" })
            <div class="col-sm-3 col-md-2">
                @Html.EditorFor(model => model.Salario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Salario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SkillChute, htmlAttributes: new { @class = "control-label col-sm-3 col-md-2" })
            <div class="col-sm-3 col-md-2">
                @Html.EditorFor(model => model.SkillChute, new { htmlAttributes = new { @class = "form-control skill" } })
                @Html.ValidationMessageFor(model => model.SkillChute, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SkillPasse, htmlAttributes: new { @class = "control-label col-sm-3 col-md-2" })
            <div class="col-sm-3 col-md-2">
                @Html.EditorFor(model => model.SkillPasse, new { htmlAttributes = new { @class = "form-control skill" } })
                @Html.ValidationMessageFor(model => model.SkillPasse, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SkillCabeceio, htmlAttributes: new { @class = "control-label col-sm-3 col-md-2" })
            <div class="col-sm-3 col-md-2">
                @Html.EditorFor(model => model.SkillCabeceio, new { htmlAttributes = new { @class = "form-control skill" } })
                @Html.ValidationMessageFor(model => model.SkillCabeceio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SkillMarcacao, htmlAttributes: new { @class = "control-label col-sm-3 col-md-2" })
            <div class="col-sm-3 col-md-2">
                @Html.EditorFor(model => model.SkillMarcacao, new { htmlAttributes = new { @class = "form-control skill" } })
                @Html.ValidationMessageFor(model => model.SkillMarcacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SkillDefesa, htmlAttributes: new { @class = "control-label col-sm-3 col-md-2" })
            <div class="col-sm-3 col-md-2">
                @Html.EditorFor(model => model.SkillDefesa, new { htmlAttributes = new { @class = "form-control skill" } })
                @Html.ValidationMessageFor(model => model.SkillDefesa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Overall, htmlAttributes: new { @class = "control-label col-sm-3 col-md-2" })
            <div class="col-sm-3 col-md-2">
                @Html.EditorFor(model => model.Overall, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                @Html.ValidationMessageFor(model => model.Overall, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group text text-right">
            <div class="col-xs-12 col-sm-6 col-md-4">
                <input type="submit" value="Confirmar"class="btn btn-warning" />
            </div>
        </div>
    </div>
}

<hr />

<div class="alert alert-info text text-right">
    <a href="@Url.Action("Index")"><i class="glyphicon glyphicon-arrow-left"></i> Voltar para a lista</a>
</div>

@section Scripts{
    <script>
        $(".skill").on("blur", function () {
            let overall = 0;

            $(".skill").each(function (index, element) {
                let value = $(element).val();
                overall += parseInt(value);
            });

            $("#Overall").val(overall / 5);
        });
    </script>
}